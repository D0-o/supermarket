<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="rml.dao.CashierInGoodsMapper" >
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cashier_in_goods
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="rml.model.CashierInGoods" >
    insert into cashier_in_goods (goodsName, goodsCode,
      salesPrice, purchasePrice, `type`,
      inventory, supplier, productionPeriod, 
      shelfLife, batch, status, 
      createTime, uid, uname, 
      parentId)
    values (#{goodsName,jdbcType=VARCHAR}, #{goodsCode,jdbcType=VARCHAR},
      #{salesPrice,jdbcType=DECIMAL}, #{purchasePrice,jdbcType=DECIMAL}, #{type,jdbcType=INTEGER},
      #{inventory,jdbcType=INTEGER}, #{supplier,jdbcType=INTEGER}, #{productionPeriod,jdbcType=VARCHAR},
      #{shelfLife,jdbcType=INTEGER}, #{batch,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{uid,jdbcType=BIGINT}, #{uname,jdbcType=VARCHAR},
      #{parentId,jdbcType=BIGINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="rml.model.CashierInGoods" >
    update cashier_in_goods
    set goodsName = #{goodsName,jdbcType=VARCHAR},
      goodsCode = #{goodsCode,jdbcType=VARCHAR},
      salesPrice = #{salesPrice,jdbcType=DECIMAL},
      purchasePrice = #{purchasePrice,jdbcType=DECIMAL},
      `type` = #{type,jdbcType=INTEGER},
      inventory = #{inventory,jdbcType=INTEGER},
      supplier = #{supplier,jdbcType=INTEGER},
      productionPeriod = #{productionPeriod,jdbcType=VARCHAR},
      shelfLife = #{shelfLife,jdbcType=INTEGER},
      batch = #{batch,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      uid = #{uid,jdbcType=BIGINT},
      uname = #{uname,jdbcType=VARCHAR},
      parentId = #{parentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultType="rml.model.CashierInGoods" parameterType="java.lang.Long" >
    select id, goodsName, goodsCode, salesPrice, purchasePrice, `type`, inventory, supplier,
    productionPeriod, shelfLife, batch, status, createTime, uid, uname, parentId
    from cashier_in_goods
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultType="rml.model.CashierInGoods" parameterType="rml.model.CashierInGoods">
    select id, goodsName, goodsCode, salesPrice, purchasePrice, `type`, inventory, supplier,
    productionPeriod, shelfLife, batch, status, createTime, uid, uname, parentId
    from cashier_in_goods
    <where>
      <if test="id != null">
        and id = #{id}
      </if>
      <if test="goodsName != null and '' != goodsName">
        and goodsName like CONCAT('%',#{goodsName},'%')
      </if>
      <if test="goodsCode != null and '' != goodsCode">
        and goodsCode = #{goodsCode}
      </if>
      <if test="type != null">
        and `type` = #{type}
      </if>
      <if test="parentId != null">
        and parentId = #{parentId,jdbcType=BIGINT}
      </if>
      <if test="uid != null">
        and uid = #{uid,jdbcType=BIGINT}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="batch != null and '' != batch">
        and batch = #{batch,jdbcType=VARCHAR}
      </if>
      <if test="sTime != null and '' != sTime">
        and createTime <![CDATA[ >= ]]> #{sTime,jdbcType=VARCHAR}
      </if>
      <if test="eTime != null and '' != eTime">
        and createTime <![CDATA[ <= ]]> #{eTime,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  <select id="select" resultType="java.lang.String" parameterType="rml.model.CashierInGoods">
    select batch from cashier_in_goods
    <where>
      <if test="parentId != null">
        and parentId = #{parentId,jdbcType=BIGINT}
      </if>
      <if test="uid != null">
        and uid = #{uid,jdbcType=BIGINT}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=INTEGER}
      </if>
    </where>
    group by batch
  </select>
</mapper>